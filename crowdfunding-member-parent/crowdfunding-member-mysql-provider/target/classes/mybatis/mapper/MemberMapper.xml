<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lzc.crowd.mapper.MemberMapper">
  <resultMap id="BaseResultMap" type="com.lzc.crowd.entity.po.MemberPO">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="login_acct" jdbcType="VARCHAR" property="loginAcct" />
    <result column="user_pwd" jdbcType="CHAR" property="userPwd" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone_num" jdbcType="VARCHAR" property="phoneNum" />
    <result column="auth_status" jdbcType="INTEGER" property="authStatus" />
    <result column="user_type" jdbcType="INTEGER" property="userType" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="card_num" jdbcType="VARCHAR" property="cardNum" />
    <result column="acct_type" jdbcType="INTEGER" property="acctType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, login_acct, user_pwd, email, phone_num, auth_status, user_type, real_name, card_num,
    acct_type
  </sql>
  <select id="selectByExample" parameterType="com.lzc.crowd.entity.po.MemberPOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_member
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_member
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lzc.crowd.entity.po.MemberPOExample">
    delete from t_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.lzc.crowd.entity.po.MemberPO" useGeneratedKeys="true">
    insert into t_member (login_acct, user_pwd, email,
      phone_num, auth_status, user_type,
      real_name, card_num, acct_type
      )
    values (#{loginAcct,jdbcType=VARCHAR}, #{userPwd,jdbcType=CHAR}, #{email,jdbcType=VARCHAR},
      #{phoneNum,jdbcType=VARCHAR}, #{authStatus,jdbcType=INTEGER}, #{userType,jdbcType=INTEGER},
      #{realName,jdbcType=VARCHAR}, #{cardNum,jdbcType=VARCHAR}, #{acctType,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.lzc.crowd.entity.po.MemberPO" useGeneratedKeys="true">
    insert into t_member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="loginAcct != null">
        login_acct,
      </if>
      <if test="userPwd != null">
        user_pwd,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phoneNum != null">
        phone_num,
      </if>
      <if test="authStatus != null">
        auth_status,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="cardNum != null">
        card_num,
      </if>
      <if test="acctType != null">
        acct_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="loginAcct != null">
        #{loginAcct,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        #{userPwd,jdbcType=CHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="authStatus != null">
        #{authStatus,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="cardNum != null">
        #{cardNum,jdbcType=VARCHAR},
      </if>
      <if test="acctType != null">
        #{acctType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lzc.crowd.entity.po.MemberPOExample" resultType="java.lang.Long">
    select count(*) from t_member
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_member
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.loginAcct != null">
        login_acct = #{record.loginAcct,jdbcType=VARCHAR},
      </if>
      <if test="record.userPwd != null">
        user_pwd = #{record.userPwd,jdbcType=CHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneNum != null">
        phone_num = #{record.phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="record.authStatus != null">
        auth_status = #{record.authStatus,jdbcType=INTEGER},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=INTEGER},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.cardNum != null">
        card_num = #{record.cardNum,jdbcType=VARCHAR},
      </if>
      <if test="record.acctType != null">
        acct_type = #{record.acctType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_member
    set id = #{record.id,jdbcType=INTEGER},
    login_acct = #{record.loginAcct,jdbcType=VARCHAR},
    user_pwd = #{record.userPwd,jdbcType=CHAR},
    email = #{record.email,jdbcType=VARCHAR},
    phone_num = #{record.phoneNum,jdbcType=VARCHAR},
    auth_status = #{record.authStatus,jdbcType=INTEGER},
    user_type = #{record.userType,jdbcType=INTEGER},
    real_name = #{record.realName,jdbcType=VARCHAR},
    card_num = #{record.cardNum,jdbcType=VARCHAR},
    acct_type = #{record.acctType,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lzc.crowd.entity.po.MemberPO">
    update t_member
    <set>
      <if test="loginAcct != null">
        login_acct = #{loginAcct,jdbcType=VARCHAR},
      </if>
      <if test="userPwd != null">
        user_pwd = #{userPwd,jdbcType=CHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        phone_num = #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="authStatus != null">
        auth_status = #{authStatus,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="cardNum != null">
        card_num = #{cardNum,jdbcType=VARCHAR},
      </if>
      <if test="acctType != null">
        acct_type = #{acctType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lzc.crowd.entity.po.MemberPO">
    update t_member
    set login_acct = #{loginAcct,jdbcType=VARCHAR},
      user_pwd = #{userPwd,jdbcType=CHAR},
      email = #{email,jdbcType=VARCHAR},
      phone_num = #{phoneNum,jdbcType=VARCHAR},
      auth_status = #{authStatus,jdbcType=INTEGER},
      user_type = #{userType,jdbcType=INTEGER},
      real_name = #{realName,jdbcType=VARCHAR},
      card_num = #{cardNum,jdbcType=VARCHAR},
      acct_type = #{acctType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>